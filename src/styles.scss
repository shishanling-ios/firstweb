
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$AEPractice-primary: mat.define-palette(mat.$indigo-palette);
$AEPractice-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$AEPractice-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$AEPractice-theme: mat.define-light-theme((
  color: (
    primary: $AEPractice-primary,
    accent: $AEPractice-accent,
    warn: $AEPractice-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($AEPractice-theme);


// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$AEPractice-primary: mat.define-palette(mat.$indigo-palette);
$AEPractice-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$AEPractice-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
//$AEPractice-theme: mat.define-light-theme((
//  color: (
//    primary: $AEPractice-primary,
//    accent: $AEPractice-accent,
//    warn: $AEPractice-warn,
//  )
//));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
//@include mat.all-component-themes($AEPractice-theme);

/* You can add global styles to this file, and also import other style files */

.lf {float: left;}
.rf {float: right;}
html, body, gsk-root, .layout {
  margin: 0;
  padding: 0;
  min-height: 100%;
  min-width: 100%;
  overflow: hidden;
}

body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; font-size: 16px;}

.fill-remaining-space {
  // 使用 flexbox 填充剩余空间
  // @angular/material 中的很多控件使用了 flex 布局
  flex: 1 1 auto;
}

.full-width {
  width: 100%;
}

mat-list-base .mat-list-item .mat-list-icon, .mat-list-base .mat-list-option .mat-list-icon {
  height: auto!important;
}
.cdk-virtual-scroll-viewport {
  min-height: 36px;
  .avatar-name {
    position: relative;
    top: 1px;
  }
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
